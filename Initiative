import java.util.*;
import java.io.*;
class Initiative extends UserClass{
	String  dateOfEvent,timeOfEvent,descriptionOfEvent,statusOfEvent;
	String idOfEvent, placeOfEvent;
	int hour,minute,day,month,year;
	int credit;

		//Empty Constructor
	public Initiative(String name, String id) {
	super(name);
	id = super.getId();
	this.idOfEvent = setIdOfEvent();
	}
	
	//Full Constructor
	public Initiative(String name,String id,String dateOfEvent,String timeOfEvent,String descriptionOfEvent) {
		super(name);
		id = super.getId();
		this.idOfEvent = setIdOfEvent();
		this.dateOfEvent=dateOfEvent;
		this.descriptionOfEvent=descriptionOfEvent;
		this.timeOfEvent=timeOfEvent;
	}
// Setters begin here(1)
// Method to auto create id for the event (done)
		public String setIdOfEvent() {
			idOfEvent = UUID.randomUUID().toString();
			return idOfEvent;
		}
// Method to set the Date of the event (done)
		public void setDateOfEvent(int day,int month,int year) {
	if(0< day && day<=31)
				this.day=day;
				else
				this.day=-1;
			
		if(0<month&&month<12)
				this.month=month;
				else
				month = -1;
				
		if(2023<year&&year<2030)
					this.year=year;
					else
					month = -1;
				
		if (this.day == -1 || this.month == -1 || this.year == -1)
				System.out.println("Invalid Date");
			else
				dateOfEvent = this.day+"/"+this.month+"/"+this.year;
		}	
// Method to set the Time of the event (done)
		public void setTimeOfEvent(int hour, int minute) {
			if(0<= hour&&hour<24)
			this.hour=hour;
			else
			this.hour=0;
			
			if(0<=minute&&minute<60)
			this.minute=minute;
			else
			minute = 0;
			
		if(this.hour<10 &&this.minute<10) 	
			timeOfEvent ="0"+ this.hour+":0"+this.minute;
		if(this.hour>=10 &&this.minute<10) 	
			timeOfEvent = this.hour+":0"+this.minute;
		if(this.hour<10 &&this.minute>=10) 	
			timeOfEvent ="0"+ this.hour+":"+this.minute;
		if(this.hour>=10 &&this.minute>=10) 	
			timeOfEvent =+ this.hour+":"+this.minute;
		}
		
		public void setDescriptionOfEvent(String m) {
		descriptionOfEvent = m;
		}	
		
		public void setCredit(int m) {
			credit = m;
			}			
// Setters end here(1)
		
//Getters begin here(2)
		public String getIdOfEvent() {
			return idOfEvent;
		}
		public String getDateOfEvent() {
			return dateOfEvent;
		}
		public String getTimeOfEvent() {
			return timeOfEvent;
		}
		public String getDescriptionOfEvent() {
			return descriptionOfEvent;
		}
		public String getStatusOEvent() {
			return statusOfEvent;
		}
		public int getCredit() {
			return credit;
		}
		
		// Needs admin class to be completed
		public String getStatus() {
			return "ds";
		}
//Getters end here(2)
		// This is for initiating an event, waiting for JFrame inputs to declare them here. (40%)
		public void options() throws FileNotFoundException{
			Scanner console = new Scanner(System.in);
			String option;
				option = console.next(); // this will change to Jframe letter
				switch(option) {
				case "a":
				// only the input that were put in JFRame must be fixed here simple
				break;
				case "b":
				break;
				case "c":
				break;
				case "d":
				break;
				case "e":
				break;
				case "":
				break;
				case "g":
				break;
				case "h":
				break;
				}
			}

	}
